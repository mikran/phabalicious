(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{369:function(t,e,a){"use strict";a.r(e);var s=a(42),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"structure-of-the-configuration-file"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#structure-of-the-configuration-file"}},[t._v("#")]),t._v(" Structure of the configuration file")]),t._v(" "),a("p",[t._v("The configuration is fetched from the file "),a("code",[t._v("fabfile.yaml")]),t._v(" and should have the following structure:")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <the project name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("needs")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" list of methods\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("requires")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.0")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("dockerHosts")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("docker1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("hosts")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("host1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\n")])])]),a("p",[t._v("Here's the documentation of the supported and used keys:")]),t._v(" "),a("h2",{attrs:{id:"name"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#name"}},[t._v("#")]),t._v(" name")]),t._v(" "),a("p",[t._v("The name of the project, it's only used for output.")]),t._v(" "),a("h2",{attrs:{id:"needs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#needs"}},[t._v("#")]),t._v(" needs")]),t._v(" "),a("p",[t._v("List here all needed methods for that type of project. Available methods are:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("local")]),t._v(" runs all commands for that configuration locally.")]),t._v(" "),a("li",[a("code",[t._v("git")]),t._v(" for deployments via git")]),t._v(" "),a("li",[a("code",[t._v("ssh")])]),t._v(" "),a("li",[a("code",[t._v("drush")]),t._v(" for support of drupal installations")]),t._v(" "),a("li",[a("code",[t._v("files")])]),t._v(" "),a("li",[a("code",[t._v("mattermost")]),t._v(" for slack-notifications")]),t._v(" "),a("li",[a("code",[t._v("webhook")]),t._v(" to invoke webhooks when running specific tasks")]),t._v(" "),a("li",[a("code",[t._v("docker")]),t._v(" for docker-support")]),t._v(" "),a("li",[a("code",[t._v("composer")]),t._v(" for composer support")]),t._v(" "),a("li",[a("code",[t._v("drupalconsole")]),t._v(" for drupal-concole support")]),t._v(" "),a("li",[a("code",[t._v("platform")]),t._v(" for deploying to platform.sh")]),t._v(" "),a("li",[a("code",[t._v("artifacts--ftp")]),t._v(" to deploy to a ftp-server")]),t._v(" "),a("li",[a("code",[t._v("artifacts--git")]),t._v(" to deploy an artifact to a git repository")])]),t._v(" "),a("p",[a("strong",[t._v("Example for drupal 7")])]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("needs")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ssh\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" git\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" drush\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" files\n")])])]),a("p",[a("strong",[t._v("Example for drupal 8 composer based and dockerized")])]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("needs")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ssh\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" git\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" drush\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" composer\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" docker\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" files\n")])])]),a("h2",{attrs:{id:"requires"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#requires"}},[t._v("#")]),t._v(" requires")]),t._v(" "),a("p",[t._v("The file-format of phabalicious changed over time. Set this to the lowest version of phabalicious which can handle the file. Should bei "),a("code",[t._v("2.0")])]),t._v(" "),a("h2",{attrs:{id:"hosts"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hosts"}},[t._v("#")]),t._v(" hosts")]),t._v(" "),a("p",[t._v("Hosts is a list of host-definitions which contain all needed data to connect to a remote host. Here's an example")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("hosts")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("exampleHost")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("host")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" example.host.tld\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("user")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" example_user\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2233")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("rootFolder")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /var/www/public\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("gitRootFolder")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /var/www\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("siteFolder")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /sites/default\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("filesFolder")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /sites/default/files\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("backupFolder")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /var/www/backups\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("supportsInstalls")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" true"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v("false\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("supportsCopyFrom")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" true"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v("false\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("branch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" develop\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("docker")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("database")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("scripts")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("sshTunnel")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      ..\n\n")])])]),a("p",[t._v("You can get all host-information including the default values using the phabalicious command "),a("code",[t._v("about")]),t._v(":")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("phab --config"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("staging about\n")])])]),a("p",[t._v("This will print all host configuration for the host "),a("code",[t._v("staging")]),t._v(".")]),t._v(" "),a("h3",{attrs:{id:"general-keys"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#general-keys"}},[t._v("#")]),t._v(" General keys")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("type")]),t._v(" defines the type of installation. Currently there are four types available:\n"),a("ul",[a("li",[a("code",[t._v("dev")]),t._v(" for dev-installations, they won't backup the databases on deployment")]),t._v(" "),a("li",[a("code",[t._v("test")]),t._v(" for test-installations, similar than "),a("code",[t._v("dev")]),t._v(", no backups on deployments")]),t._v(" "),a("li",[a("code",[t._v("stage")]),t._v(" for staging-installations.")]),t._v(" "),a("li",[a("code",[t._v("prod")]),t._v(" for live-installations. Some tasks can not be run on live-installations as "),a("code",[t._v("install")]),t._v(" or as a target for "),a("code",[t._v("copyFrom")]),t._v("\nThe main use-case is to run different scripts per type, see the "),a("code",[t._v("common")]),t._v("-section.")])])]),t._v(" "),a("li",[a("code",[t._v("rootFolder")]),t._v("  the web-root-folder of the installation, typically exposed to the public.")]),t._v(" "),a("li",[a("code",[t._v("needs")]),t._v(" a list of needed methods, if not set, the globally set "),a("code",[t._v("needs")]),t._v(" gets used.")]),t._v(" "),a("li",[a("code",[t._v("configName")]),t._v(" is set by phabalicious, it's the name of the configuration")]),t._v(" "),a("li",[a("code",[t._v("supportsInstalls")]),t._v(", default is true for "),a("code",[t._v("types")]),t._v(" != "),a("code",[t._v("prod")]),t._v(". If sent to true you can run the "),a("code",[t._v("install")]),t._v("-task")]),t._v(" "),a("li",[a("code",[t._v("supportsCopyFrom")]),t._v(", default is true. If set to true, you can use that configuration as a source for the "),a("code",[t._v("copy-from")]),t._v("-task.")]),t._v(" "),a("li",[a("code",[t._v("backupBeforeDeploy")]),t._v(" is set to true for "),a("code",[t._v("types")]),t._v(" "),a("code",[t._v("stage")]),t._v(" and "),a("code",[t._v("prod")]),t._v(", if set to true, a backup of the DB is made before a deployment.")]),t._v(" "),a("li",[a("code",[t._v("tmpFolder")]),t._v(", default is "),a("code",[t._v("/tmp")]),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("environment")]),t._v(" contains a list of environment variables to set before running any command")]),t._v(" "),a("li",[a("code",[t._v("shellProvider")]),t._v(" defines how to run a shell, where commands are executed, current values are\n"),a("ul",[a("li",[a("code",[t._v("local")]),t._v(": all commands are run locally")]),t._v(" "),a("li",[a("code",[t._v("ssh")]),t._v(": all commands are run via a ssh-shell")]),t._v(" "),a("li",[a("code",[t._v("docker-exec")]),t._v(" all commands are run via docker-exec.")]),t._v(" "),a("li",[a("code",[t._v("docker-exec-ver-ssh")]),t._v(" all commands are run via docker-exec on a remote instance")])])]),t._v(" "),a("li",[a("code",[t._v("inheritFromBlueprint")]),t._v(" this will apply the blueprint to the current configuration. This makes it easy to base the common configuration on a blueprint and just override some parts of it.\n"),a("ul",[a("li",[a("code",[t._v("config")]),t._v(" this is the blueprint-configuration used as a base.")]),t._v(" "),a("li",[a("code",[t._v("variant")]),t._v(" this is the variant to pass to the blueprint")])])]),t._v(" "),a("li",[a("code",[t._v("knownHosts")]),t._v(" a list of hosts which should be added to the known-hosts file before running a ssh-/git-command. Here's an example:"),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("knownHosts")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" github.com\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" source.factorial.io"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2222")]),t._v("\n")])])]),t._v("They can be overridden on a per host-basis.")])]),t._v(" "),a("h3",{attrs:{id:"configuration-for-the-local-method"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#configuration-for-the-local-method"}},[t._v("#")]),t._v(" Configuration for the local-method")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("shellProvider")]),t._v(" default is "),a("code",[t._v("local")]),t._v(", see above.")]),t._v(" "),a("li",[a("code",[t._v("shellExecutable")]),t._v(" default is "),a("code",[t._v("/bin/bash")]),t._v(" The executable for running a shell. Please note, that phabalicious requires a sh-compatible shell.")]),t._v(" "),a("li",[a("code",[t._v("shellProviderExecutable")]),t._v(", the command, which will create the process for a shell, here "),a("code",[t._v("/bin/bash")])])]),t._v(" "),a("h3",{attrs:{id:"configuration-for-the-ssh-method"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#configuration-for-the-ssh-method"}},[t._v("#")]),t._v(" Configuration for the ssh-method")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("host")]),t._v(", "),a("code",[t._v("user")]),t._v(", "),a("code",[t._v("port")]),t._v(" are used to connect via SSH to the remote machine. Please make sure SSH key forwarding is enabled on your installation.")]),t._v(" "),a("li",[a("code",[t._v("disableKnownHosts")]),t._v(", default is false, set to true to ignore the known_hosts-file.")]),t._v(" "),a("li",[a("code",[t._v("sshTunnel")]),t._v(" phabalicious supports SSH-Tunnels, that means it can log in into another machine and forward the access to the real host. This is handy for dockerized installations, where the ssh-port of the docker-instance is not public. "),a("code",[t._v("sshTunnel")]),t._v(" needs the following informations\n"),a("ul",[a("li",[a("code",[t._v("bridgeHost")]),t._v(": the host acting as a bridge.")]),t._v(" "),a("li",[a("code",[t._v("bridgeUser")]),t._v(": the ssh-user on the bridge-host")]),t._v(" "),a("li",[a("code",[t._v("bridgePort")]),t._v(": the port to connect to on the bridge-host")]),t._v(" "),a("li",[a("code",[t._v("localPort")]),t._v(": the local port which gets forwarded to the "),a("code",[t._v("destPort")]),t._v(". If "),a("code",[t._v("localPort")]),t._v(" is omitted, the ssh-port of the host-configuration is used. If the host-configuration does not have a port-property a random port is used.")]),t._v(" "),a("li",[a("code",[t._v("destHost")]),t._v(": the destination host to forward to")]),t._v(" "),a("li",[a("code",[t._v("destHostFromDockerContainer")]),t._v(": if set, the docker's Ip address is used for destHost. This is automatically set when using a "),a("code",[t._v("docker")]),t._v("-configuration, see there.")]),t._v(" "),a("li",[a("code",[t._v("destPort")]),t._v(": the destination port to forward to")]),t._v(" "),a("li",[a("code",[t._v("shellProviderExecutable")]),t._v(", default is "),a("code",[t._v("/usr/bin/ssh")]),t._v(", the executable to establish the connection.")])])])]),t._v(" "),a("h3",{attrs:{id:"configuration-for-the-git-method"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#configuration-for-the-git-method"}},[t._v("#")]),t._v(" Configuration for the git-method")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("gitRootFolder")]),t._v("  the folder, where the git-repository lies. Defaults to "),a("code",[t._v("rootFolder")])]),t._v(" "),a("li",[a("code",[t._v("branch")]),t._v(" the name of the branch to use for deployments, they get usually checked out and pulled from origin.")]),t._v(" "),a("li",[a("code",[t._v("ignoreSubmodules")]),t._v(" default is false, set to false, if you don't want to update a projects' submodule on deploy.")]),t._v(" "),a("li",[a("code",[t._v("gitOptions")]),t._v(" a keyed list of options to apply to a git command. Currently only pull is supported. If your git-version does not support "),a("code",[t._v("--rebase")]),t._v(" you can disable it via an empty array: "),a("code",[t._v("pull: []")])])]),t._v(" "),a("h3",{attrs:{id:"configuration-for-the-composer-method"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#configuration-for-the-composer-method"}},[t._v("#")]),t._v(" Configuration for the composer-method")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("composerRootFolder")]),t._v(" the folder where the composer.json for the project is stored, defaults to "),a("code",[t._v("gitRootFolder")]),t._v(".")])]),t._v(" "),a("h3",{attrs:{id:"configuration-for-the-drush-method"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#configuration-for-the-drush-method"}},[t._v("#")]),t._v(" Configuration for the drush-method")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("uuid")]),t._v(" of the drupal 8 site (D8 only) Needed for proper config imports")]),t._v(" "),a("li",[a("code",[t._v("siteFolder")]),t._v(" is a drupal-specific folder, where the settings.php resides for the given installation. This allows to interact with multisites etc.")]),t._v(" "),a("li",[a("code",[t._v("filesFolder")]),t._v(" the path to the files-folder, where user-assets get stored and which should be backed up by the "),a("code",[t._v("files")]),t._v("-method")]),t._v(" "),a("li",[a("code",[t._v("revertFeatures")]),t._v(", defaults to "),a("code",[t._v("True")]),t._v(", when set all features will be reverted when running a reset (drush only)")]),t._v(" "),a("li",[a("code",[t._v("configurationManagement")]),t._v(", an array of configuration-labels to import on "),a("code",[t._v("reset")]),t._v(", defaults to "),a("code",[t._v("['staging']")]),t._v(". You can add command arguments for drush, e.g. "),a("code",[t._v("['staging', 'dev --partial']")])]),t._v(" "),a("li",[a("code",[t._v("database")]),t._v(" the database-credentials the "),a("code",[t._v("install")]),t._v("-tasks uses when installing a new installation.\n"),a("ul",[a("li",[a("code",[t._v("name")]),t._v(" the database name")]),t._v(" "),a("li",[a("code",[t._v("host")]),t._v(" the database host")]),t._v(" "),a("li",[a("code",[t._v("user")]),t._v(" the database user")]),t._v(" "),a("li",[a("code",[t._v("pass")]),t._v(" the password for the database user")]),t._v(" "),a("li",[a("code",[t._v("prefix")]),t._v(" the optional table-prefix to use")]),t._v(" "),a("li",[a("code",[t._v("skipCreateDatabase")]),t._v(" do not create a database when running the install task.")])])]),t._v(" "),a("li",[a("code",[t._v("adminUser")]),t._v(", default is "),a("code",[t._v("admin")]),t._v(", the name of the admin-user to set when running the reset-task on "),a("code",[t._v("dev")]),t._v("-instances")]),t._v(" "),a("li",[a("code",[t._v("replaceSettingsFile")]),t._v(", default is true. If set to false, the settings.php file will not be replaced when running an install.")]),t._v(" "),a("li",[a("code",[t._v("installOptions")]),t._v(" default is "),a("code",[t._v("distribution: minimal, locale: en, options: ''")]),t._v(". You can change the distribution to install and/ or the locale.")]),t._v(" "),a("li",[a("code",[t._v("drupalVersion")]),t._v(" set the drupal-version to use. If not set phabalicious is trying to guess it from the "),a("code",[t._v("needs")]),t._v("-configuration.")]),t._v(" "),a("li",[a("code",[t._v("drushVersion")]),t._v(" set the used crush-version, default is "),a("code",[t._v("8")]),t._v(". Drush is not 100% backwards-compatible, for phabalicious needs to know its version.")]),t._v(" "),a("li",[a("code",[t._v("supportsZippedBackups")]),t._v(" default is true, set to false, when zipped backups are not supported")])]),t._v(" "),a("h3",{attrs:{id:"configuration-of-the-yarn-method"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#configuration-of-the-yarn-method"}},[t._v("#")]),t._v(" Configuration of the yarn-method")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("yarnRootFolder")]),t._v(" folder where the package.json is located.")]),t._v(" "),a("li",[a("code",[t._v("yarnBuildCommand")]),t._v(" build-command for yarn to execute when running the install- or reset-task.")]),t._v(" "),a("li",[a("code",[t._v("yarnRunContext")]),t._v(" in which context should the command be executed. Defaults to "),a("code",[t._v("host")]),t._v(", alternative is "),a("code",[t._v("dockerHost")]),t._v(", which means, that the yarn command is not executed in the context of the host, but instead of the dockerHost. Suitable if you replace the yarn executable by a docker exec method.")])]),t._v(" "),a("h3",{attrs:{id:"configuration-of-the-npm-method"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#configuration-of-the-npm-method"}},[t._v("#")]),t._v(" Configuration of the npm-method")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("npmRootFolder")]),t._v(" folder where the package.json is located.")]),t._v(" "),a("li",[a("code",[t._v("npmBuildCommand")]),t._v(" build-command for npm to execute when running the install- or reset-task.")]),t._v(" "),a("li",[a("code",[t._v("npmRunContext")]),t._v(" in which context should the command be executed. Defaults to "),a("code",[t._v("host")]),t._v(", alternative is "),a("code",[t._v("dockerHost")]),t._v(", which means, that the npm command is not executed in the context of the host, but instead of the dockerHost. Suitable if you replace the npm executable by a docker exec method.")])]),t._v(" "),a("h3",{attrs:{id:"configuration-of-the-artifacts-ftp-method"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#configuration-of-the-artifacts-ftp-method"}},[t._v("#")]),t._v(" Configuration of the artifacts--ftp-method")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("target")]),t._v(" keeps all configuration bundled:\n"),a("ul",[a("li",[a("code",[t._v("user")]),t._v(" the ftp-user")]),t._v(" "),a("li",[a("code",[t._v("password")]),t._v(" the ftp password")]),t._v(" "),a("li",[a("code",[t._v("host")]),t._v(" the ftp host")]),t._v(" "),a("li",[a("code",[t._v("port")]),t._v(", default is 21, the port to connect to")]),t._v(" "),a("li",[a("code",[t._v("rootFolder")]),t._v(" the folder to copy the app into on the ftp-host.")]),t._v(" "),a("li",[a("code",[t._v("lftpOptions")]),t._v(", an array of options to pass when executing "),a("code",[t._v("lftp")])]),t._v(" "),a("li",[a("code",[t._v("actions")]),t._v(" a list of actions to perform. See detailed documentation for more info.")])])])]),t._v(" "),a("h3",{attrs:{id:"configuration-of-the-artifacts-git-method"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#configuration-of-the-artifacts-git-method"}},[t._v("#")]),t._v(" Configuration of the artifacts--git method")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("target")]),t._v(" contains the following options\n"),a("ul",[a("li",[a("code",[t._v("repository")]),t._v(" the url of the target repository")]),t._v(" "),a("li",[a("code",[t._v("branch")]),t._v(" the branch to use for commits")]),t._v(" "),a("li",[a("code",[t._v("useLocalRepository")]),t._v(" if set to true, phab will use the current directory as a source for the artifact, if set to false, phab will create a new app in a temporary folder and use that as a artifact")]),t._v(" "),a("li",[a("code",[t._v("actions")]),t._v(" a list of actions to perform. See detailed documentation for more info.")])])])]),t._v(" "),a("h3",{attrs:{id:"configuration-of-the-artifacts-custom-method"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#configuration-of-the-artifacts-custom-method"}},[t._v("#")]),t._v(" Configuration of the artifacts--custom method")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("target")]),t._v(" contains the following options\n"),a("ul",[a("li",[a("p",[a("code",[t._v("actions")]),t._v(" a list of actions to perform. See detailed documentation for more info.")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("stages")]),t._v(" a list of custom stages to perform. A combination of these values:")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" installCode\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" installDependencies\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" runActions\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" runDeployScript\n")])])])])])])]),t._v(" "),a("h3",{attrs:{id:"configuration-of-the-docker-method"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#configuration-of-the-docker-method"}},[t._v("#")]),t._v(" Configuration of the docker-method")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("docker")]),t._v(" for all docker-relevant configuration. "),a("code",[t._v("configuration")]),t._v(" and "),a("code",[t._v("name")]),t._v("/"),a("code",[t._v("service")]),t._v(" are the only required keys, all other are optional and used by the docker-tasks.\n"),a("ul",[a("li",[a("code",[t._v("configuration")]),t._v(" should contain the key of the dockerHost-configuration in "),a("code",[t._v("dockerHosts")])]),t._v(" "),a("li",[a("code",[t._v("name")]),t._v(" contains the name of the docker-container. This is needed to get the IP-address of the particular docker-container when using ssh-tunnels (see above).")]),t._v(" "),a("li",[t._v("for docker-compose-base setups you can provide the "),a("code",[t._v("service")]),t._v(" instead the name, phabalicious will get the docker name automatically from the service.")])])])]),t._v(" "),a("h3",{attrs:{id:"configuration-of-the-mattermost-method"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#configuration-of-the-mattermost-method"}},[t._v("#")]),t._v(" Configuration of the mattermost-method")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("notifyOn")]),t._v(": a list of all tasks where to send a message to a Mattermost channel. Have a look at the global Mattermost-configuration-example below.")])]),t._v(" "),a("h2",{attrs:{id:"dockerhosts"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dockerhosts"}},[t._v("#")]),t._v(" dockerHosts")]),t._v(" "),a("p",[a("code",[t._v("dockerHosts")]),t._v(" is similar structured as the "),a("code",[t._v("hosts")]),t._v("-entry. It's a keyed lists of hosts containing all necessary information to create a ssh-connection to the host, controlling the docker-instances, and a list of tasks, the user might call via the "),a("code",[t._v("docker")]),t._v("-command. See the "),a("code",[t._v("docker")]),t._v("-entry for a more birds-eye-view of the concepts.")]),t._v(" "),a("p",[t._v("Here's an example "),a("code",[t._v("dockerHosts")]),t._v("-entry:")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("dockerHosts")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mbb")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("runLocally")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("host")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" multibasebox.dev\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("user")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" vagrant\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("password")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" vagrant\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("rootFolder")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /vagrant\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("environment")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("VHOST")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" %host.host%\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("WEBROOT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" %host.rootFolder%\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tasks")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("logs")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" docker logs %host.docker.name%\n")])])]),a("p",[t._v("Here's a list of all possible entries of a dockerHosts-entry:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("shellProvider")]),t._v(", the shell-provider to use, currently "),a("code",[t._v("local")]),t._v(" or "),a("code",[t._v("ssh")]),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("runLocally")]),t._v(": if set to true, the "),a("code",[t._v("local")]),t._v("-shell-provider will be used.")]),t._v(" "),a("li",[a("code",[t._v("host")]),t._v(", "),a("code",[t._v("user")]),t._v(" and "),a("code",[t._v("port")]),t._v(": when using the "),a("code",[t._v("ssh")]),t._v("-shell-provicer.")]),t._v(" "),a("li",[a("code",[t._v("environment")]),t._v(" a keyed list of environment-variables to set, when running one of the tasks. The replacement-patterns of "),a("code",[t._v("scripts")]),t._v(" are supported, see there for more information.")]),t._v(" "),a("li",[a("code",[t._v("tasks")]),t._v(" a keyed list of commands to run for a given docker-subtask (similar to "),a("code",[t._v("scripts")]),t._v("). Note: these commands are running on the docker-host, not on the host. All replacement-patterns do work, and you can call even other tasks via "),a("code",[t._v("execute(<task>, <subtask>)")]),t._v(" e.g. "),a("code",[t._v("execute(docker, stop)")]),t._v(" See the "),a("code",[t._v("scripts")]),t._v("-section for more info.")])]),t._v(" "),a("p",[t._v("You can use "),a("code",[t._v("inheritsFrom")]),t._v(" to base your configuration on an existing one. You can add any configuration you may need and reference to that information from within your tasks via the replacement-pattern "),a("code",[t._v("%dockerHost.keyName%")]),t._v(" e.g. "),a("code",[t._v("%dockerHost.host%")]),t._v(".")]),t._v(" "),a("p",[t._v("You can reference a specific docker-host-configuration from your host-configuration via")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("hosts")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("docker")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("configuration")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" mbb\n")])])]),a("h2",{attrs:{id:"common"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#common"}},[t._v("#")]),t._v(" common")]),t._v(" "),a("p",[t._v("common contains a list of commands, keyed by task and type which gets executed when the task is executed.")]),t._v(" "),a("p",[t._v("Example:")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("common")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("reset")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("dev")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(' echo "running reset on a dev'),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v('instance"\n    '),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("stage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(' echo "running reset on a stage'),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v('instance"\n    '),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("prod")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(' echo "running reset on a prod'),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v('instance"\n  '),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("deployPrepare")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("dev")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(' echo "preparing deploy on a dev instance"\n  '),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("deploy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("dev")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(' echo "deploying on a dev instance"\n  '),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("deployFinished")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("dev")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(' echo "finished deployment on a dev instance"\n')])])]),a("p",[t._v("The first key is the task-name ("),a("code",[t._v("reset")]),t._v(", "),a("code",[t._v("deploy")]),t._v(", ...), the second key is the type of the installation ("),a("code",[t._v("dev")]),t._v(", "),a("code",[t._v("stage")]),t._v(", "),a("code",[t._v("prod")]),t._v(", "),a("code",[t._v("test")]),t._v("). Every task is prepended by a prepare-stage and appended by a finished-stage, so you can call scripts before and after an actual task. You can even run other scripts via the "),a("code",[t._v("execute")]),t._v("-command, see the "),a("code",[t._v("scripts")]),t._v("-section.")]),t._v(" "),a("h2",{attrs:{id:"scripts"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scripts"}},[t._v("#")]),t._v(" scripts")]),t._v(" "),a("p",[t._v("A keyed list of available scripts. This scripts may be defined globally (on the root level) or on a per host-level. The key is the name of the script and can be executed via")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("phab --config"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("configuration"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" script "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("p",[t._v("A script consists of an array of commands which gets executed sequentially.")]),t._v(" "),a("p",[t._v("An example:")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("scripts")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(' echo "Running script test"\n  '),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("test2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(' echo "Running script test2 on %host.config_name%\n    '),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" execute(script"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" test)\n")])])]),a("p",[t._v("Scripts can be defined on a global level, but also on a per host-level.")]),t._v(" "),a("p",[t._v("You can declare default-values for arguments via a slightly modified syntax:")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("scripts")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("defaultArgumentTest")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("defaults")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Bob\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(' echo "Hello %arguments.name%"\n')])])]),a("p",[t._v("Running the script via "),a("code",[t._v('phab config:mbb script:defaultArgumentTest,name="Julia"')]),t._v(" will show "),a("code",[t._v("Hello Julia")]),t._v(". Running "),a("code",[t._v("phab config:mbb script:defaultArgumentTest")]),t._v(" will show "),a("code",[t._v("Hello Bob")]),t._v(".")]),t._v(" "),a("p",[t._v("For more information see the main scripts section below.")]),t._v(" "),a("h2",{attrs:{id:"jira"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jira"}},[t._v("#")]),t._v(" jira")]),t._v(" "),a("p",[t._v("The jira-command needs some configuration. It is advised to store this configuration in your user folder ("),a("code",[t._v("~/.fabfile.local.yaml")]),t._v(") or somewhere upstream of your project folder, as it might contain sensitive information.")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("jira")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("host")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <jira"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("host"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("user")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <jira"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("pass")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <jira"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("password"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n")])])]),a("p",[t._v("The command will use the global "),a("code",[t._v("key")]),t._v(" as project-key, you can override that via the following configuration:")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("jira")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("projectKey")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <jira project"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n")])])]),a("h2",{attrs:{id:"mattermost"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mattermost"}},[t._v("#")]),t._v(" mattermost")]),t._v(" "),a("p",[t._v("Phabalicious can send notifications to a running Mattermost instance. You need to create an incoming web hook in your instance and pass this to your configuration. Here's an example")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mattermost")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("username")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" phabalicious\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("webhook")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" https"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//chat.your.server.tld/hooks/"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Channel")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"my-channel"')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("hosts")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("needs")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" mattermost\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("notifyOn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" deploy\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" reset\n")])])]),a("ul",[a("li",[a("code",[t._v("mattermost")]),t._v(" contains all global mattermost config.\n"),a("ul",[a("li",[a("code",[t._v("username")]),t._v(" the username to post messages as")]),t._v(" "),a("li",[a("code",[t._v("webhook")]),t._v(" the address of the web-hook")]),t._v(" "),a("li",[a("code",[t._v("channel")]),t._v(" the channel to post the message to")])])]),t._v(" "),a("li",[a("code",[t._v("notifyOn")]),t._v(" is a list of tasks which should send a notification")])]),t._v(" "),a("p",[t._v("You can test the Mattermost config via")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("phab notify "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello world"')]),t._v(" --config "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("your-config"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("h2",{attrs:{id:"webhooks"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webhooks"}},[t._v("#")]),t._v(" webhooks")]),t._v(" "),a("p",[t._v("Phabalicious provides a command to invoke webhooks from the command line, but also integrates invoking webhooks when running a specific task or as a callback for scripts.")]),t._v(" "),a("p",[t._v("Webhooks are declared in the global namespace:")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("webhooks")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nameOfWebhook")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("url")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <url"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("of"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("webhook"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("method")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <get"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v("post"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v("delete"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("format")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <json"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v("form_params"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("payload")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("prop1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" value1\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("prop2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" value2\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# a list of options passed directly to guzzle.")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("options")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\n")])])]),a("p",[t._v("The data in payload get submitted depending on the chosen format, e.g. as JSON or as form-values. You can use the replacement patterns for entries in the payload known similar to scripts, e.g.")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("webhooks")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("demoWebhook")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("url")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <url"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("method")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" get\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("payload")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("branch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%host.branch%"')]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("token")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%settings.token%"')]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("someOtherValue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%arguments.foo%"')]),t._v("\n")])])]),a("p",[a("code",[t._v("webhooks")]),t._v(" has a special entry called "),a("code",[t._v("defaults")]),t._v(" where you can add common defaults for all webhook invokations like special headers, etc")]),t._v(" "),a("p",[t._v("The current defaults are:")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("webhooks")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("defaults")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("format")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" json\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("options")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("headers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("User-Agent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" phabalicous\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Accept")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" application/json\n\n")])])]),a("p",[t._v("To invoke a webhook from a script-section, use the built-in function "),a("code",[t._v("webhook(name-of-webhook, arguments)")]),t._v(":")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("host")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("demo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("needs")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" git\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" artifacts"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("git\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" webhook\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("deployFinished")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(' echo "Invoking webhook '),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v('"\n      '),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" webhook(myWebhook"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" foo=bar)\n")])])]),a("p",[t._v("Alternatively you can use the "),a("code",[t._v("webhooks")]),t._v("-keyword to provide a mapping of task and webhook to invoke:")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("host")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("demo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("needs")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" git\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" artifacts"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("git\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" webhook\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("webhooks")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("deployPrepare")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" myWebhook1\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("deployFinished")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" myWebhook2\n")])])]),a("h2",{attrs:{id:"other"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#other"}},[t._v("#")]),t._v(" other")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("deploymentModule")]),t._v(" name of the deployment-module the drush-method enables when doing a deploy")]),t._v(" "),a("li",[a("code",[t._v("sqlSkipTables")]),t._v(" a list of table-names drush should omit when doing a backup.")]),t._v(" "),a("li",[a("code",[t._v("configurationManagement")]),t._v(" a list of configuration-labels to import on "),a("code",[t._v("reset")]),t._v(". This defaults to "),a("code",[t._v("['staging']")]),t._v(" and may be overridden on a per-host basis. You can add command arguments to the the configuration label.")])]),t._v(" "),a("p",[t._v("Example:")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("deploymentModule")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" my_deployment_module\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("usePty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("useShell")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("gitOptions")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("pull")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("rebase\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("quiet\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("sqlSkipTables")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" cache\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" watchdog\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" session\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("configurationManagement")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("staging")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" drush config"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("import "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("y staging\n   "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("dev")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" Drusch config"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("import "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("y dev "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("partial\n")])])])])}),[],!1,null,null,null);e.default=n.exports}}]);