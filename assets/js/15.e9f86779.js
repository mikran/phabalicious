(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{370:function(e,t,a){"use strict";a.r(t);var s=a(42),o=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"docker-integration"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-integration"}},[e._v("#")]),e._v(" Docker integration")]),e._v(" "),a("p",[e._v("The docker-integration is quite simple, but very powerful. In a fabfile, there are host-configuration under the key "),a("code",[e._v("hosts")]),e._v(" and docker-configs under the key "),a("code",[e._v("dockerHosts")]),e._v(". A "),a("code",[e._v("host")]),e._v(" can reference a docker-configuration, multiple hosts can use one docker-config.")]),e._v(" "),a("h2",{attrs:{id:"a-docker-configuration"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#a-docker-configuration"}},[e._v("#")]),e._v(" A docker-configuration")]),e._v(" "),a("p",[e._v("A docker configuration must contain these keys:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("rootFolder")]),e._v(" the rootFolder, where the projectFolder can be found")]),e._v(" "),a("li",[a("code",[e._v("shellProvider")]),e._v(": "),a("code",[e._v("local")]),e._v(" or "),a("code",[e._v("ssh")]),e._v("; in which shell the tasks-commands should be run. The shell-provider might require more information e.g. "),a("code",[e._v("user")]),e._v(", "),a("code",[e._v("host")]),e._v(" and "),a("code",[e._v("port")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("tasks")]),e._v(": a keyed list of scripts to use. The key is the name of the script, which you can trigger via the "),a("code",[e._v("docker command")])]),e._v(" "),a("li",[a("code",[e._v("environment")]),e._v(": a key-value list of environment-variables to set before running a docker-command. This helps to modularize docker-compose-files, for example.")])]),e._v(" "),a("p",[e._v("The tasks can use the pattern-replacement used in other parts of phabalicious to get data from the docker-config or from the host-config into the tasks. Here's a small example:")]),e._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("tasks")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("run")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(' echo "running container %host.docker.name% for config %host.configName% in %dockerHost.rootFolder%\n')])])]),a("p",[e._v("If you want to use some host-config, use "),a("code",[e._v("host.")]),e._v(" as a prefix, if you want to use sth from the docker-config, use "),a("code",[e._v("dockerHost.")]),e._v(" as prefix.")]),e._v(" "),a("h2",{attrs:{id:"the-docker-specific-host-configuration"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#the-docker-specific-host-configuration"}},[e._v("#")]),e._v(" the docker-specific host-configuration")]),e._v(" "),a("p",[e._v("All docker-configuration is stored inside the "),a("code",[e._v("docker")]),e._v("-group. It has only 2 required keys:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("configuration")]),e._v(" this links to a key under "),a("code",[e._v("dockerHosts")])]),e._v(" "),a("li",[a("code",[e._v("projectFolder")]),e._v(" the folder, where this project is stored in relation to the "),a("code",[e._v("rootFolder")])]),e._v(" "),a("li",[a("code",[e._v("name")]),e._v(" or "),a("code",[e._v("service")]),e._v(". Some commands need to know with which container you want to interact. Provide the name of the docker-container via the "),a("code",[e._v("name")]),e._v("-property, if you are using docker-compose you can set the "),a("code",[e._v("service")]),e._v(" accordingly, then phabalicious will try to compute the docker-name automatically.")])]),e._v(" "),a("p",[e._v("You can add as many data to the yams file and reference it via the replacement-mechanism described earlier.")]),e._v(" "),a("h2",{attrs:{id:"a-simple-example"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#a-simple-example"}},[e._v("#")]),e._v(" A simple example:")]),e._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("dockerHosts")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("rootFolder")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" /root/folder\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("shellProvider")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" local\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("environment")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("VHOST")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" %host.configName%.test\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("tasks")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("run")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(' echo "docker run"\n      '),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("build")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(' echo "docker build"\n      '),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("all")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(' echo "current config'),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(' %host.configName%"\n        '),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" execute(docker"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" build)\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" execute(docker"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" run)\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("hosts")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("testHostA")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("...")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("docker")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("configuration")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" test\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("projectFolder")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v("host"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v("a\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" testhosta\n")])])]),a("p",[e._v("This snippet will expose 3 docker-commands for the host "),a("code",[e._v("testHostA")]),e._v(", you can execute them via")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("phab --config"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("testHostA docker run"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v("build"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v("all\n")])])]),a("p",[e._v("The output for "),a("code",[e._v("phab -ctestHostA docker all")]),e._v(" will be:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("current config: testHostA\ndocker build\ndocker run\n")])])]),a("p",[e._v("The inheritance mechanism allows you to store the docker-config in a central location and reuse it in your fabfile:")]),e._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("dockerHosts")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("testB")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("rootFolder")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" /some/other/folder\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("inheritsFrom")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" https"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("//some.host/docker.yml\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" https"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("//some.host/docker"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v("compose.yml\n")])])]),a("h2",{attrs:{id:"built-in-docker-commands"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#built-in-docker-commands"}},[e._v("#")]),e._v(" Built-in docker commands")]),e._v(" "),a("p",[e._v("There are two commands builtin, because they are hard to implement in a script-only version:")]),e._v(" "),a("ul",[a("li",[e._v("waitForServices")]),e._v(" "),a("li",[e._v("copySSHKeysToDocker")])]),e._v(" "),a("h3",{attrs:{id:"waitforservices"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#waitforservices"}},[e._v("#")]),e._v(" waitForServices")]),e._v(" "),a("p",[e._v("This will try to run "),a("code",[e._v("supervisorctl status")]),e._v(" every 10 seconds, and wait until all services are up and running. If you want to disable this command, set the executable to false with")]),e._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("executables")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("supervisorctl")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[e._v("false")]),e._v("\n")])])]),a("h3",{attrs:{id:"copysshkeystodocker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#copysshkeystodocker"}},[e._v("#")]),e._v(" copySSHKeysToDocker")]),e._v(" "),a("p",[e._v("This command will copy the referenced files from your local computer into the docker container and set the permissions so ssh can use the copied data.")]),e._v(" "),a("p",[e._v("These are the needed global settings in the fabfile:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("dockerKeyFile")]),e._v(" will copy the referenced private key and its public key into the container")]),e._v(" "),a("li",[a("code",[e._v("dockerAuthorizedKeysFile")]),e._v(", the "),a("code",[e._v("authorized_keys")]),e._v("-file, can be a path to a file or an url")]),e._v(" "),a("li",[a("code",[e._v("dockerKnownHostsFile")]),e._v(", the "),a("code",[e._v("known_hosts")]),e._v("-file")]),e._v(" "),a("li",[a("code",[e._v("dockerNetRcFile")]),e._v(", will copy a "),a("code",[e._v(".netrc")]),e._v("-file into the container (suitable for authenticating against https repositories)")])]),e._v(" "),a("p",[e._v("Obviously a ssh-demon should be running inside your docker-container.")]),e._v(" "),a("h2",{attrs:{id:"predefined-docker-tasks"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#predefined-docker-tasks"}},[e._v("#")]),e._v(" Predefined docker-tasks")]),e._v(" "),a("p",[e._v("Phabalicious is running some predefined docker-tasks if set in the fabfile and when using the commands "),a("code",[e._v("app:create")]),e._v(" or "),a("code",[e._v("app:destroy")])]),e._v(" "),a("ul",[a("li",[a("code",[e._v("spinUp")]),e._v(": get all needed container running")]),e._v(" "),a("li",[a("code",[e._v("spinDown")]),e._v(": stop all app-containers")]),e._v(" "),a("li",[a("code",[e._v("deleteContainer")]),e._v(": remove and delete all app container")])]),e._v(" "),a("p",[e._v("If you want to support this in your configuration, add the tasks to the fabfile and its corresponding commands.")]),e._v(" "),a("h2",{attrs:{id:"conclusion"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#conclusion"}},[e._v("#")]),e._v(" Conclusion")]),e._v(" "),a("p",[e._v("As you can see, there's not much docker-specific besides the naming. So in theory you can control something else like "),a("code",[e._v("rancher")]),e._v(" or maybe even "),a("code",[e._v("kubectl")]),e._v(". All you have is the referencing between a host and a dockerHost and the possibility to run tasks locally or via SSH on a remote instance, and pass data from the host-config or docker-config to your scripts.")])])}),[],!1,null,null,null);t.default=o.exports}}]);