(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{365:function(t,a,e){"use strict";e.r(a);var s=e(42),n=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"creating-destroying-an-app-from-existing-configuration"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#creating-destroying-an-app-from-existing-configuration"}},[t._v("#")]),t._v(" Creating/ destroying an app from existing configuration")]),t._v(" "),e("p",[t._v("Phabalicious can create or delete a complete app with two commands:")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("phab --config=<config> app:create --copy-from=<other-config>")])]),t._v(" "),e("li",[e("code",[t._v("phab --config=<config> app:destroy")])])]),t._v(" "),e("p",[t._v("Both commands executes a list of stages, which can be influenced via configuration. Every method can react to the different stages and run some tasks if needed.")]),t._v(" "),e("h2",{attrs:{id:"the-standard-stages"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#the-standard-stages"}},[t._v("#")]),t._v(" the standard stages")]),t._v(" "),e("p",[t._v("These are the standard stages. You can override them by adding them to the global section of your fabfile:")]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("appStages")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("create")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" prepareDestination\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" installCode\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" spinUp\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" installDependencies\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" install\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("deploy")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" spinUp\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("destroy")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" spinDown\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" deleteContainers\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ftpSync and gitSync are only used for deploying artifacts.")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("artifacts.ftp")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" installCode\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" installDependencies\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" runActions\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" runDeployScript\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" syncToFtp\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("artifacts.git")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" installCode\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" installDependencies\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" getSourceCommitInfo\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" pullTargetRepository\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" runActions\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" runDeployScript\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" pushToTargetRepository\n")])])]),e("h2",{attrs:{id:"creating-a-new-app"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#creating-a-new-app"}},[t._v("#")]),t._v(" Creating a new app")]),t._v(" "),e("p",[t._v("Run the phab-command as usual. If you want to copy from an existing installation, add the "),e("code",[t._v("--copy-from")]),t._v("-option.")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("phab --config"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("your-config"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" app:create\n")])])]),e("p",[t._v("If the app is already created (there's an existing "),e("code",[t._v(".projectCreated")]),t._v("-file in the root of the installation), only the "),e("code",[t._v("deploy")]),t._v("-stage will be executed, and afterwards the deploy-task will be executed.")]),t._v(" "),e("p",[t._v("If the app is not created yet, all "),e("code",[t._v("create")]),t._v("-stages will be executed. If nothing went wrong you should have a running installation of the given configuration")]),t._v(" "),e("h2",{attrs:{id:"destroying-an-app"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#destroying-an-app"}},[t._v("#")]),t._v(" Destroying an app")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("phab --config"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("your-config"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" app:destroy\n")])])]),e("p",[t._v("This will execute all "),e("code",[t._v("destroy")]),t._v("-stages and delete the project-folder afterwards.")]),t._v(" "),e("h2",{attrs:{id:"blueprints"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#blueprints"}},[t._v("#")]),t._v(" Blueprints")]),t._v(" "),e("p",[t._v("Both commands work best when using blueprints. This will allow to create a config and an app from a single string like a name of a feature.")]),t._v(" "),e("p",[t._v("Some examples:")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("phab --config"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("some-config --blueprint"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("feature/"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("some-feature"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" create:app\n")])])]),e("p",[t._v("Will create a new app from a blueprinted config.")]),t._v(" "),e("h2",{attrs:{id:"customizing-via-scripts"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#customizing-via-scripts"}},[t._v("#")]),t._v(" Customizing via scripts")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("You can add custom scripts to your host-configuration which will be run before a stage is entered or after a stage is finished. They follow a naming-convention:")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("appCreate<NameOfStage>Before")])]),t._v(" "),e("li",[e("code",[t._v("appCreate<NameOfStage>Finished")])])]),t._v(" "),e("p",[t._v("e.g. "),e("code",[t._v("appCreateInstallDependenciesBefore")]),t._v(" or "),e("code",[t._v("appCreateSpinDownFinished")]),t._v(". All context variables are exposed to scripts as "),e("code",[t._v("context.data.*")]),t._v(" or "),e("code",[t._v("context.results.*")])])])])])}),[],!1,null,null,null);a.default=n.exports}}]);